# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet desc "Description" b
describe('$1', ${2:async }() => {
	$0
})
endsnippet

snippet it "Example" b
it('$1', ${2:async }() => {
	$0
})
endsnippet

snippet bind "Bind a function" b
this.$1 = this.$1.bind(${2:this})
endsnippet

snippet imp "Import a lib" b
import $1 from '$2'
endsnippet

snippet fun "Function definition" b
function $1($2) {
	$0
}
endsnippet

snippet rccom "Class component" b
${1:export ${2:default }}class $3 extends React.PureComponent {
	render() {
		return (
			$0
		)
	}
}
endsnippet

snippet rcoms "Component spec" b
import { render } from '@testing-library/react'
import $1 from './'

describe('<$1 />', () => {
	$0
})
endsnippet

snippet waite "Wait for element" b
await waitForElement(() => $0)
endsnippet

snippet wait "Arbitrary wait" b
await wait(() => {
	$0
})
endsnippet

snippet l "Console.log" b
console.log('$1', $1)
endsnippet
