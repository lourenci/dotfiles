" Settings in this file may depend on plugins, so let's install them first.
" Not to be confused with the contents of ~/.vim/plugin/* which are
" configuration options for each plugin and automatically loaded by Vim.
source ~/.vim/plugin/plugins.vim

"-----------------------------
" Mappings
"-----------------------------
" Leader Mappings
map <Space> <leader>
" Relative path to clipboard
nnoremap <Leader>rp :let @*=expand("%")<CR>

" Indent all file, return the cursor to the latest position and put the code
" in the middle of the screen
nnoremap <Leader>= gg=G``zz
nnoremap <M-a> ggVG

if has('nvim')
  tnoremap <C-w>h <C-\><C-n><C-w>h
  tnoremap <C-w>j <C-\><C-n><C-w>j
  tnoremap <C-w>k <C-\><C-n><C-w>k
  tnoremap <C-w>l <C-\><C-n><C-w>l
  tnoremap <C-w>o <C-\><C-n><C-w>o
  tnoremap <C-w>v <C-\><C-n><C-w>v
  tnoremap <C-w><C-w> <C-\><C-n><C-w><C-w>
  set inccommand=nosplit
endif

" Change keyboard to USA layout on vim enter
if executable('xkbswitch')
  au VimEnter * silent !{xkbswitch -s 4}
endif

syntax on

set hidden                            " Allows change the buffer without the needs to save it
set autoread                          " Auto reload changed files
if !has('gui_running')
  au FocusGained * :checktime         " Auto load external changes when it gains focus
endif
set wildmenu                          " Tab autocomplete in command mode
set clipboard=unnamed,unnamedplus     " Clipboard support (OSX)
set laststatus=2                      " Show status line on startup
set nowrap                            " Don't wrap long lines
au BufRead,BufNewFile *.md setlocal wrap spell spelllang=en_us
set listchars=extends:→               " Show arrow if line continues rightwards
set listchars+=precedes:←             " Show arrow if line continues leftwards
set nobackup nowritebackup noswapfile " Turn off backup files
set noerrorbells novisualbell         " Turn off visual and audible bells
set expandtab shiftwidth=2 tabstop=2  " Two spaces for tabs everywhere
set history=500                       " Number of commands history to store
set hlsearch                          " Highlight search results
set ignorecase smartcase              " Search queries intelligently set case
set incsearch                         " Show search results as you type
set splitright                        " Open new splits to the right
set splitbelow                        " Open new splits to the bottom
set noshowmode                        " Do not show the mode below the statusline
set exrc                              " enable project speficific vimrc
set showcmd                           " shows partial commands in the right bottom of screen
set encoding=utf-8
set synmaxcol=300                     " make syntax highligh works just for the first 300 chars

" Persistent undo
set undodir=~/.vim/undo/
set undofile

" Ignored files/directories from autocomplete
set wildignore+=*/tmp/*
set wildignore+=*.so
set wildignore+=*.zip
set wildignore+=*/vendor/bundle/*
set wildignore+=*/node_modules/*
set wildignore+=*/coverage/*

"-------------------------------------------------------------------------------
" Interface
"-------------------------------------------------------------------------------
set number relativenumber " Enable line numbers
set foldmethod=indent
set nofoldenable
set cursorline " Highlight on current line
set colorcolumn=120 " Vertital column at 120
if !has('gui_running')
  set termguicolors
  set mouse=a
endif

" Use <TAB> to select the popup menu.
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

let g:one_allow_italics = 1
colorscheme one
if strftime("%H") < 18
  set background=light
  call one#highlight('Folded', 'b0b0b0', 'f5f5f5', '')
  call one#highlight('Search', 'none', 'feffe5', '')
endif
call one#highlight('jsFunction', '', '', 'italic')
call one#highlight('jsGlobalObjects', '', '', 'italic')

" Get off my lawn - helpful when learning Vim :)
nnoremap <Up>     <NOP>
nnoremap <Down>   <NOP>
nnoremap <Left>   <NOP>
nnoremap <Right>  <NOP>
inoremap <Up>     <NOP>
inoremap <Down>   <NOP>
inoremap <Left>   <NOP>
inoremap <Right>  <NOP>
vnoremap <Up>     <NOP>
vnoremap <Down>   <NOP>
vnoremap <Left>   <NOP>
vnoremap <Right>  <NOP>
